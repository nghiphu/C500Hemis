@model IEnumerable<C500Hemis.Models.TbKyLuatNguoiHoc>

@{
    ViewData["Title"] = "DANH SÁCH KỶ LUẬT";
}
@section Heads {
    <link href="https://cdn.datatables.net/v/dt/jq-3.7.0/dt-2.1.7/r-3.0.3/datatables.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-image: url("https://hoanghamobile.com/tin-tuc/wp-content/uploads/2023/07/cach-thiet-ke-background-dep-2.jpg");
        }

        h1 {
            text-align: center;
            font-size: 40px;
        }
        /*Tăng cỡ chữ to hơn*/

        table { /* SỬA BẢNG CHUNG */
            width: 100%;
            border-collapse: collapse; /*Bỏ viền của bảng*/
            background-color: #f1f3f3; /*Màu mặc định trắng đục, ngả xám*/
            margin-top: 20px; /*Cách lề trên 20px*/
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6); /*Hiệu ứng đường viền, tạo cảm giác bảng là tờ giấy*/
        }

            table th, table td {
                padding: 12px; /* Khoảng trống giữa nội dung và viền bảng */
                text-align: center; /* Căn giữa theo chiều ngang */
                border-bottom: 5px solid #ddd; /* Viền của bảng: Kích thước - kiểu - màu */
            }

            table th {
                background-color: #AAAAAA; /* Màu nền xám cho tiêu đề bảng */
                color: black; /* Màu chữ đen cho tiêu đề bảng */
                font-size: 16px; /* Kích thước chữ là 16 pixel */
            }

        /* Hiệu ứng hover cho các phần tử có class 'value' */
        .value:hover {
            background-color: #D3D3D3; /* màu xám sáng khi chuột di qua */
        }


        p {
            text-align: center;
            margin-top: 30px; /* Khoảng cách phía trên là 30 pixel */
        }

        /* NÚT SỬA, XÓA */
        .button_a_edit, .button_a_del {
            border-style: solid; /* Kiểu viền là đường kẻ liền (solid) */
            border-width: 0.5px; /* Độ dày của viền là 0.5 pixel */
            font-size: 14px;
            display: inline-block; /* Hiển thị dưới dạng khối nội tuyến, cho phép thêm khoảng cách xung quanh */
            padding: 4px 8px; /* Khoảng cách bên trong: 4 pixel trên/dưới, 8 pixel trái/phải */
            text-decoration: none; /* Bỏ bỏ gạch chân của liên kết (nếu có) */
            color: black;
            border-radius: 5px; /* Bo góc viền với bán kính 5 pixel */
            font-weight: bold;
            text-align: center;
            transition: transform 0.3s ease, background-color 0.3s ease; /* Hiệu ứng chuyển đổi cho độ biến dạng và màu nền trong 0.3 giây */
            margin: 2px; /* Khoảng cách bên ngoài giữa các nút là 2 pixel */
        }


        /* màu mặc định của 2 nút trùng màu khi hover vào dòng */
        .button_a_edit, .button_a_del {
            background-color: lightgreen; /* màu xanh sáng */
        }

            /* Khi di chuột vào nút "SỬA" */
            .button_a_edit:hover {
                background-color: #007bff; /*màu xanh dương*/
                color: white;
            }

            /* Khi di chuột vào nút "XÓA" */
            .button_a_del:hover {
                background-color: #dc3545; /* Màu đỏ */
                color: white;
            }

        /* Đặt kiểu bố cục cho khối chứa các nút sửa xóa */
        .edit_del {
            width: 100%;
            display: flex;
            justify-content: center; /* Căn giữa các nút trong khối */
            align-items: center; /* Cũng là căn giữa (theo trục) */
        }

        /* Định dạng cho phần tử có class 'contain' */
        .contain {
            margin-bottom: 100px; /* Khoảng cách dưới cùng là 100 pixel để tạo không gian giữa phần tử này và phần tử bên dưới */
        }

        /* Định dạng cho các tiêu đề bảng trong phần tử có id 'view_table' */
        #view_table th {
            text-align: center; 
        }

        /* Định dạng cho phần đầu bảng (thead) */
        thead {
            background-color: lightblue; 
        }
    </style>
}
<h1> HỒ SƠ HỌC VIÊN BỊ KỶ LUẬT  (@Model.Count())</h1>
<div class="contain">
    <table class="table table-hover" id="view_table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.IdHocVienNavigation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LyDo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SoQuyetDinh)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NgayQuyetDinh)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NamBiKyLuat)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdCapQuyetDinhNavigation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdLoaiKyLuatNavigation)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                // 2 dòng này dùng khi kích chuột vào hàng dữ liệu trong bảng sẽ chuyển sang trang detail


                // Kết hợp với hiệu ứng hover khi di chuột

                // Thêm thuộc tính title vào các cột trong hàng
                <tr class="value" style="text-align: center; cursor: pointer;"
                    title="Bấm vào đây để xem chi tiết"
                    onclick="window.location.href='@Url.Action("Details", new { id = item.IdKyLuatNguoiHoc })'">
                    <td>
                        @Html.DisplayFor(modelItem => item.IdHocVienNavigation.IdNguoiNavigation.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LyDo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SoQuyetDinh)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NgayQuyetDinh)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NamBiKyLuat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdCapQuyetDinhNavigation.IdCapKhenThuong)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdLoaiKyLuatNavigation.IdLoaiKyLuat)
                    </td>
                    <td>
                        <div class="edit_del">
                            <a class="button_a_edit" asp-action="Edit" asp-route-id="@item.IdKyLuatNguoiHoc">
                                <i class="fas fa-edit"></i> SỬA
                            </a>
                            <a class="button_a_del" asp-action="Delete" asp-route-id="@item.IdKyLuatNguoiHoc">
                                <i class="fas fa-trash-alt"></i> XÓA
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.1.8/b-3.1.2/b-colvis-3.1.2/b-html5-3.1.2/b-print-3.1.2/datatables.min.js"></script>
    <script>
        //Datatable trong datatable.net. Tìm hiểu thêm thông tin: https://datatables.net/manual/
        var table = new DataTable("#view_table", {
            language: {
                // Đặt văn bản gợi ý cho hộp tìm kiếm thành "Nhập tên học viên"
                searchPlaceholder: "Nhập tên học viên", // Văn bản gợi ý trong hộp tìm kiếm
                //Điều chỉnh phần hiển thị label của thanh tìm kiếm - Xem thêm thông tin: https://datatables.net/reference/option/language.search
                search: "Tìm kiếm ",
                //Điều chỉnh phần hiển thị thông tin của table - Xem thêm thông tin: https://datatables.net/reference/option/language.info
                info: "Hiển thị _MAX_ trong _TOTAL_ bản ghi",
                zeroRecords: "Không tìm thấy học viên",  // Thông báo khi không tìm thấy kết quả nào
            },
            // Định nghĩa các cột có thể tìm kiếm (cột đầu tiên là IDKyLuatNguoiHoc)
            columnDefs: [
                { targets: [0], searchable: true },  // Cột IDKyLuatNguoiHoc có thể tìm kiếm
                { targets: '_all', searchable: false } // Vô hiệu hóa tìm kiếm cho các cột khác
            ],
            createdRow: (row, data, index) => {
            },
            layout: {//Layout: https://datatables.net/examples/layout/index.html
                topStart: {
                    buttons: [//extension buttons: https://datatables.net/extensions/buttons/config
                        {
                            className: 'btn btn-primary', //Thêm class cho button
                            text: '<i class="fa-solid fa-circle-plus"></i>',
                            action: function (e, dt, node, config) {//Hành động của button
                                window.location.href = '@Url.Action("Create")';
                            }
                        }
                    ]
                }
            }
        });
        //HTMLDOM Element: https://developer.mozilla.org/en-US/docs/Web/API/Element
        //Datatables API: https://datatables.net/reference/api/table().header()
        var row = table.table().header().lastElementChild;
        row.lastElementChild.remove();
        row.appendChild(document.createElement('th'));
    </script>
}