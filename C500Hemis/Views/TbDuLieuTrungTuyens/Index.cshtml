@model IEnumerable<C500Hemis.Models.TbDuLieuTrungTuyen>

@{
    ViewData["Title"] = "Dữ liệu trúng tuyển";
}

@section Heads
{
    <link href="https://cdn.datatables.net/v/dt/jq-3.7.0/dt-2.1.7/r-3.0.3/datatables.min.css" rel="stylesheet">
    <style>
        /* Chỉnh màu nền cho toàn bộ trang */
        body {
            background-color: palegreen; /* Màu nền xanh nhạt */
        }

        /* Đặt hình nền cho trang, chiếm toàn bộ kích thước */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('https://static.wixstatic.com/media/9d8ed5_80206ab61cf14532924c2295418701a0~mv2.jpg/v1/fit/w_1000%2Ch_710%2Cal_c%2Cq_80/file.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            opacity: 0.5; /* Làm mờ hình nền */
            z-index: -1; /* Đặt hình nền phía sau nội dung */
        }

       

        .table {
            width: 100%; /* Bảng chiếm 100% chiều rộng */
            border-collapse: collapse; /* Đảm bảo các đường viền bảng gộp lại thành 1 đường */
            margin-top: 20px;
            position: relative;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6); /* Tạo đổ bóng cho bảng */
            color: black;
            background-color: rgba(255, 255, 255, 0.8); /* Nền trắng với độ trong suốt */
            table-layout: auto;
        }

            /* Căn giữa nội dung trong các ô dữ liệu và tiêu đề */
            .table th, .table td {
                text-align: center; /* Căn giữa nội dung theo chiều ngang */
                vertical-align: middle; /* Căn giữa nội dung theo chiều dọc */
                padding: 8px 10px; /* Khoảng cách bên trong ô */
                border: 1px solid #ddd; /* Đường viền mỏng bao quanh mỗi ô */
                font-size: 14px;
                white-space: nowrap; /* Ngăn chặn việc xuống dòng trong ô */
            }

                /* Đặt cột hành động cố định khi cuộn */
                .table th:last-child, .table td:last-child {
                    position: sticky;
                    right: 0;
                    z-index: 1;
                    background-color: rgba(255, 255, 255, 0.8); /* Màu nền của cột */
                }

                /* Đặt cột tiêu đề hành động cố định với độ ưu tiên cao hơn */
                .table th:last-child {
                    z-index: 2;
                }
        /* Định dạng cho các nút Sửa, Xóa, Chi tiết */
        .button_edit, .button_del, .button_details {
            border-style: solid;
            border-width: 0.5px;
            font-size: 14px;
            display: inline-block;
            padding: 4px 12px; /* Tăng kích thước nút */
            text-decoration: none;
            color: black;
            border-radius: 5px;
            font-weight: bold;
            text-align: center;
            transition: transform 0.3s ease, background-color 0.3s ease; /* Hiệu ứng thay đổi màu và kích thước khi hover */
            margin: 5px; /* Tạo khoảng cách giữa các nút */
        }

        /* Màu mặc định của các nút */
        .button_edit {
            background-color: #f0ad4e;
            border-color: #eea236;
        }

        .button_details {
            background-color: #5bc0de;
            border-color: #46b8da;
        }

        .button_del {
            background-color: #d9534f;
            border-color: #d43f3a;
        }

        /* Hiệu ứng khi di chuột vào các nút */
        .button_edit:hover {
            background-color: darkgoldenrod;
            color: white;
        }

        .button_details:hover {
            background-color: #17a2b8;
            color: white;
        }

        .button_del:hover {
            background-color: #dc3545;
            color: white;
        }

        /* Định dạng khối chứa các nút */
        .edit_del {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        /* Định dạng cho nút thêm mới với màu xanh lá đậm */
        .btn.btn-primary {
            background-color: forestgreen;
            border-color: forestgreen;
            font-size: 16px;
            padding: 8px 16px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        /* Định dạng icon FontAwesome trong nút */
        .btn.btn-primary i {
            margin-right: 5px;
        }

        /* Hiệu ứng khi di chuột vào nút thêm mới */
        .btn.btn-primary:hover {
            background-color: #228b22; /* Màu xanh đậm hơn khi hover */
            border-color: #228b22;
            transform: scale(1.05); /* Phóng to nhẹ khi di chuột vào */
        }
    </style>
}


<h1 class="text-center my-4">Dữ liệu trúng tuyển</h1>

<!-- Container cho bảng dữ liệu, cho phép cuộn khi vượt quá chiều cao cho phép -->
<div>
    <table class="table table-striped table-hover" id="view_table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.IdDuLieuTrungTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.Cccd)</th>
                <th>@Html.DisplayNameFor(model => model.HoVaTen)</th>
                <th>@Html.DisplayNameFor(model => model.MaTuyenSinh)</th>
                <th>@Html.DisplayNameFor(model => model.KhoaDaoTaoTrungTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.IdDoiTuongDauVao)</th>
                <th>@Html.DisplayNameFor(model => model.IdDoiTuongUuTien)</th>
                <th>@Html.DisplayNameFor(model => model.IdHinhThucTuyenSinh)</th>
                <th>@Html.DisplayNameFor(model => model.IdKhuVuc)</th>
                <th>@Html.DisplayNameFor(model => model.TruongThpt)</th>
                <th>@Html.DisplayNameFor(model => model.ToHopMonTrungTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.DiemMon1)</th>
                <th>@Html.DisplayNameFor(model => model.DiemMon2)</th>
                <th>@Html.DisplayNameFor(model => model.DiemMon3)</th>
                <th>@Html.DisplayNameFor(model => model.DiemUuTien)</th>
                <th>@Html.DisplayNameFor(model => model.TongDiemXetTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.SoQuyetDinhTrungTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.NgayBanHanhQuyetDinhTrungTuyen)</th>
                <th>@Html.DisplayNameFor(model => model.ChuongTrinhDaoTaoDaTotNghiepTrinhDoDaiHoc)</th>
                <th>@Html.DisplayNameFor(model => model.NganhDaTotNghiepTrinhDoDaiHoc)</th>
                <th>@Html.DisplayNameFor(model => model.ChuongTrinhDaoTaoDaTotNghiepTrinhDoThacSi)</th>
                <th>@Html.DisplayNameFor(model => model.NganhDaTotNghiepTrinhDoThacSi)</th>
                <th>Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.IdDuLieuTrungTuyen)</td>
                    <td>@Html.DisplayFor(modelItem => item.Cccd)</td>
                    <td>@Html.DisplayFor(modelItem => item.HoVaTen)</td>
                    <td>@(string.IsNullOrEmpty(item.MaTuyenSinh) ? "Chưa được nhập" : item.MaTuyenSinh)</td>
                    <td>@(string.IsNullOrEmpty(item.KhoaDaoTaoTrungTuyen) ? "Chưa được nhập" : item.KhoaDaoTaoTrungTuyen)</td>
                    <td>@(string.IsNullOrEmpty(item.IdDoiTuongDauVaoNavigation?.DoiTuongDauVao) ? "Chưa được nhập" : item.IdDoiTuongDauVaoNavigation.DoiTuongDauVao)</td>
                    <td>@(string.IsNullOrEmpty(item.IdDoiTuongUuTienNavigation?.DoiTuongUuTien) ? "Chưa được nhập" : item.IdDoiTuongUuTienNavigation.DoiTuongUuTien)</td>
                    <td>@(string.IsNullOrEmpty(item.IdHinhThucTuyenSinhNavigation?.HinhThucTuyenSinh) ? "Chưa được nhập" : item.IdHinhThucTuyenSinhNavigation.HinhThucTuyenSinh)</td>
                    <td>@(string.IsNullOrEmpty(item.IdKhuVucNavigation?.KhuVuc) ? "Chưa được nhập" : item.IdKhuVucNavigation.KhuVuc)</td>
                    <td>@(string.IsNullOrEmpty(item.TruongThpt) ? "Chưa được nhập" : item.TruongThpt)</td>
                    <td>@(string.IsNullOrEmpty(item.ToHopMonTrungTuyen) ? "Chưa được nhập" : item.ToHopMonTrungTuyen)</td>
                    <td>@Html.DisplayFor(modelItem => item.DiemMon1)</td>
                    <td>@Html.DisplayFor(modelItem => item.DiemMon2)</td>
                    <td>@Html.DisplayFor(modelItem => item.DiemMon3)</td>
                    <td>@Html.DisplayFor(modelItem => item.DiemUuTien)</td>
                    <td>@Html.DisplayFor(modelItem => item.TongDiemXetTuyen)</td>
                    <td>@(string.IsNullOrEmpty(item.SoQuyetDinhTrungTuyen) ? "Chưa được nhập" : item.SoQuyetDinhTrungTuyen)</td>
                    <td>@(item.NgayBanHanhQuyetDinhTrungTuyen?.ToString("dd/MM/yyyy") ?? "Chưa được nhập")</td>
                    <td>@(string.IsNullOrEmpty(item.ChuongTrinhDaoTaoDaTotNghiepTrinhDoDaiHoc) ? "Chưa được nhập" : item.ChuongTrinhDaoTaoDaTotNghiepTrinhDoDaiHoc)</td>
                    <td>@(string.IsNullOrEmpty(item.NganhDaTotNghiepTrinhDoDaiHoc) ? "Chưa được nhập" : item.NganhDaTotNghiepTrinhDoDaiHoc)</td>
                    <td>@(string.IsNullOrEmpty(item.ChuongTrinhDaoTaoDaTotNghiepTrinhDoThacSi) ? "Chưa được nhập" : item.ChuongTrinhDaoTaoDaTotNghiepTrinhDoThacSi)</td>
                    <td>@(string.IsNullOrEmpty(item.NganhDaTotNghiepTrinhDoThacSi) ? "Chưa được nhập" : item.NganhDaTotNghiepTrinhDoThacSi)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.IdDuLieuTrungTuyen" class="button_edit">
                            <i class="fas fa-edit"></i> Sửa
                        </a>
                        <a asp-action="Details" asp-route-id="@item.IdDuLieuTrungTuyen" class="button_details">
                            <i class="fas fa-info-circle"></i> Chi tiết
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.IdDuLieuTrungTuyen" class="button_del">
                            <i class="fas fa-trash-alt"></i> Xóa
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.1.8/b-3.1.2/b-colvis-3.1.2/b-html5-3.1.2/b-print-3.1.2/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>

    <script>
        // Khởi tạo DataTable với các tùy chỉnh
        var table = new DataTable("#view_table", {
            scrollY: "600px", // Giới hạn chiều cao của bảng là 600px, có thể điều chỉnh theo nhu cầu
            scrollX: true,    // Bật tính năng cuộn ngang
            scrollCollapse: true, // Cho phép thu gọn bảng khi có ít dữ liệu hơn
            paging: true, // Bật phân trang
            language:
            {
                search: "Tìm Kiếm", // Tùy chỉnh văn bản trên thanh tìm kiếm
                info: "Hiển thị _START_ đến _END_ trong tổng số _TOTAL_ bản ghi",
                paginate:
                {
                    first: "Trang đầu",
                    previous: "Trang trước",
                    next: "Trang sau",
                    last: "Trang cuối"
                },
                lengthMenu: "Hiển thị _MENU_ dòng mỗi trang",
                zeroRecords: "Không tìm thấy kết quả nào phù hợp",
                infoFiltered: "(lọc từ _MAX_ tổng bản ghi)",
            },
            createdRow: (row, data, index) => { },
            layout:
            {
                topStart:
                {
                    buttons:
                        [
                            {
                                className: 'btn btn-primary',
                                text: '<i class="fas fa-plus"></i> Thêm mới dữ liệu cán bộ nghiên cứu',
                                action: function (e, dt, node, config) {
                                    window.location.href = '@Url.Action("Create")';
                                }
                            }
                        ]
                }
            }
        });
       
        
    </script>

    <style>

        /* Tùy chỉnh giao diện cho thanh tìm kiếm */
        .dataTables_filter input {
            width: 100%;
            padding: 12px; /* Điều chỉnh khoảng cách bên trong để giống với thanh tìm kiếm trong hình */
            border-radius: 25px; /* Bo tròn giống như thanh tìm kiếm trong ảnh */
            border: 1px solid #ccc; /* Đặt viền nhẹ cho ô tìm kiếm */
            outline: none; /* Loại bỏ viền mặc định khi click */
            font-size: 16px; /* Kích thước chữ vừa phải */
            background-color: #f9f9f9; /* Màu nền nhạt */
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ giống như ảnh */
        }

        /* Đặt biểu tượng tìm kiếm bên trong ô */
        .dataTables_filter {
            position: relative; /* Đặt tương đối để dễ canh chỉnh biểu tượng */
        }
        /* Đặt nút "X" để xóa nội dung tìm kiếm */
            .dataTables_filter input::-webkit-search-cancel-button {
                -webkit-appearance: none; /* Xóa button mặc định của trình duyệt */
                content: '\f00d'; /* Mã FontAwesome cho icon "X" */
                font-family: 'Font Awesome 5 Free';
                font-weight: 900;
                color: #888;
                cursor: pointer;
            }
    </style>
}
